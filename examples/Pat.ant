let x = 1;;
let _ = 1;;
let () = ();;
let (x, y) = (1, 2);;
let x, y = (3, 4);;
let (a, b), (c, d) = ((5, 6), (7, 8));;

type any =
  | A of int * int
  | B
  | C of any
  | D of any * any * any * any * any * any
;;

let _ = let rec f = fun x ->
  match x with
  | (A (a, b)) -> a + b
  | A (a, b) -> a + b
  | C B -> 0
  | D (B, _, _, _, _, _) -> 1
  | D (_, B, _, _, _, _) -> 2
  | D (_, _, B, _, _, _) -> 3
  | D (_, _, _, B, _, _) -> 4
  | D (_, _, _, _, B, _) -> 5
  | D (_, _, _, _, _, B) -> 5
  | _ -> 6
  in f;;